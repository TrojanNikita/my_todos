{"ast":null,"code":"import _defineProperty from \"/Users/tk_user/Documents/todo-list/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport ActionTypes from '../actionTypes';\nconst initialState = [{\n  id: '0',\n  label: 'sdlsjh',\n  done: false\n}, {\n  id: '1',\n  label: 'dhj',\n  done: false\n}, {\n  id: '2',\n  label: 'fsxj',\n  done: false\n}];\nconst maxId = 100;\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.ADD_TODO:\n      return [...state, {\n        id: maxId++,\n        label: action.text,\n        done: false\n      }];\n\n    case 'TOGGLE_TODO':\n      return state.map(todo => todo.id === action.id ? _objectSpread({}, todo, {\n        done: !todo.done\n      }) : todo);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/tk_user/Documents/todo-list/src/data/reducers/todos.js"],"names":["ActionTypes","initialState","id","label","done","maxId","state","action","type","ADD_TODO","text","map","todo"],"mappings":";;;;;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,YAAY,GAAG,CACjB;AAACC,EAAAA,EAAE,EAAC,GAAJ;AAAQC,EAAAA,KAAK,EAAC,QAAd;AAAuBC,EAAAA,IAAI,EAAC;AAA5B,CADiB,EAEjB;AAACF,EAAAA,EAAE,EAAC,GAAJ;AAAQC,EAAAA,KAAK,EAAC,KAAd;AAAoBC,EAAAA,IAAI,EAAC;AAAzB,CAFiB,EAGjB;AAACF,EAAAA,EAAE,EAAC,GAAJ;AAAQC,EAAAA,KAAK,EAAC,MAAd;AAAqBC,EAAAA,IAAI,EAAC;AAA1B,CAHiB,CAArB;AAQA,MAAMC,KAAK,GAAC,GAAZ;AAGA,eAAe,UAASC,KAAK,GAAGL,YAAjB,EAA+BM,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,WAAW,CAACS,QAAjB;AACE,aAAO,CACL,GAAGH,KADE,EAEL;AACEJ,QAAAA,EAAE,EAAEG,KAAK,EADX;AAEEF,QAAAA,KAAK,EAAEI,MAAM,CAACG,IAFhB;AAGEN,QAAAA,IAAI,EAAE;AAHR,OAFK,CAAP;;AAQF,SAAK,aAAL;AACE,aAAOE,KAAK,CAACK,GAAN,CAAUC,IAAI,IAClBA,IAAI,CAACV,EAAL,KAAYK,MAAM,CAACL,EAApB,qBACQU,IADR;AACcR,QAAAA,IAAI,EAAE,CAACQ,IAAI,CAACR;AAD1B,WAEIQ,IAHC,CAAP;;AAKF;AACE,aAAON,KAAP;AAjBJ;AAmBD","sourcesContent":["import ActionTypes from '../actionTypes';\n\nconst initialState = [\n    {id:'0',label:'sdlsjh',done:false},\n    {id:'1',label:'dhj',done:false},\n    {id:'2',label:'fsxj',done:false}\n  ];\n\n\n\nconst maxId=100;\n\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.ADD_TODO:\n      return [\n        ...state,\n        {\n          id: maxId++,\n          label: action.text,\n          done: false\n        }\n      ]\n    case 'TOGGLE_TODO':\n      return state.map(todo =>\n        (todo.id === action.id)\n          ? {...todo, done: !todo.done}\n          : todo\n      )\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}