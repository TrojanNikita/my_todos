{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\nconst logger = createLogger();\nconst createStoreWithMiddleware = applyMiddleware(thunk, logger)(createStore);\nexport default function configureStore(initialState) {\n  return createStoreWithMiddleware(rootReducer, initialState);\n} // import { createStore } from 'redux';\n// import { persistStore, persistReducer } from 'redux-persist';\n// import storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n//\n// import rootReducer from './reducers';\n//\n// const persistConfig = {\n//   key: 'root',\n//   storage,\n// }\n//\n// const persistedReducer = persistReducer(persistConfig, rootReducer)\n//\n// export default () => {\n//   let store = createStore(persistedReducer)\n//   let persistor = persistStore(store)\n//   return { store, persistor }\n// }","map":{"version":3,"sources":["/Users/tk_user/Documents/todo-list/src/data/configureStore.js"],"names":["createStore","applyMiddleware","createLogger","thunk","rootReducer","logger","createStoreWithMiddleware","configureStore","initialState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,WAAP,MAAwB,kBAAxB;AAEA,MAAMC,MAAM,GAAGH,YAAY,EAA3B;AACA,MAAMI,yBAAyB,GAAGL,eAAe,CAACE,KAAD,EAAOE,MAAP,CAAf,CAA8BL,WAA9B,CAAlC;AAEA,eAAe,SAASO,cAAT,CAAwBC,YAAxB,EAAsC;AACnD,SAAOF,yBAAyB,CAACF,WAAD,EAAcI,YAAd,CAAhC;AACD,C,CAeD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './reducers/index';\n\nconst logger = createLogger();\nconst createStoreWithMiddleware = applyMiddleware(thunk,logger)(createStore);\n\nexport default function configureStore(initialState) {\n  return createStoreWithMiddleware(rootReducer, initialState);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import { createStore } from 'redux';\n// import { persistStore, persistReducer } from 'redux-persist';\n// import storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n//\n// import rootReducer from './reducers';\n//\n// const persistConfig = {\n//   key: 'root',\n//   storage,\n// }\n//\n// const persistedReducer = persistReducer(persistConfig, rootReducer)\n//\n// export default () => {\n//   let store = createStore(persistedReducer)\n//   let persistor = persistStore(store)\n//   return { store, persistor }\n// }\n"]},"metadata":{},"sourceType":"module"}