{"ast":null,"code":"import _defineProperty from \"/Users/tk_user/Documents/todo-list/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionTypes from '../actionTypes';\nconst initialState = {\n  todoList: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.ADD_TODO:\n      return _objectSpread({}, state, {\n        categoryList: action.payload\n      });\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/Users/tk_user/Documents/todo-list/src/data/reducers/todos.js"],"names":["actionTypes","initialState","todoList","state","action","type","ADD_TODO","categoryList","payload"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,gBAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;AAIA,eAAe,UAASC,KAAK,GAAGF,YAAjB,EAA+BG,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,WAAW,CAACM,QAAjB;AACE,+BAAWH,KAAX;AAAkBI,QAAAA,YAAY,EAAEH,MAAM,CAACI;AAAvC;AAFJ;;AAIA,SAAOL,KAAP;AACD","sourcesContent":["import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n  todoList: []\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.ADD_TODO:\n      return {...state, categoryList: action.payload}\n  }\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}