{"ast":null,"code":"import _defineProperty from \"/Users/tk_user/Documents/todo-list/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport ActionTypes from '../actionTypes'; // const initialState = [\n//     {id:'0',label:'sdlsjh',done:false},\n//     {id:'1',label:'dhj',done:false},\n//     {id:'2',label:'fsxj',done:false}\n//   ];\n\nlet maxId = 100;\nexport default function (state = [], action) {\n  switch (action.type) {\n    case ActionTypes.ADD_TODO:\n      return [...state, {\n        id: maxId++,\n        label: action.payload,\n        done: false\n      }];\n\n    case ActionTypes.TOGGLE_TODO:\n      return state.map(todo => todo.id === action.payload ? _objectSpread({}, todo, {\n        done: !todo.done\n      }) : todo);\n\n    case ActionTypes.EDIT_TODO:\n      return state.map(todo => todo.id === action.id ? _objectSpread({}, todo, {\n        label: action.payload\n      }) : todo);\n    //доделать, непонятно на что ругается\n\n    case ActionTypes.TOGGLE_ALL:\n      return state.map(todo => {\n        return _objectSpread({}, todo, {\n          done: action.payload\n        });\n      });\n    //удалить выполненные, т.е вернуть активные\n\n    case ActionTypes.DELETE_COMPLETED_TODOS:\n      return state.filter(el => !el.done);\n\n    case ActionTypes.DELETE_TODO:\n      {\n        const idx = state.findIndex(el => el.id === action.payload);\n        return [...state.slice(0, idx), ...state.slice(idx + 1)];\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/tk_user/Documents/todo-list/src/data/reducers/todos.js"],"names":["ActionTypes","maxId","state","action","type","ADD_TODO","id","label","payload","done","TOGGLE_TODO","map","todo","EDIT_TODO","TOGGLE_ALL","DELETE_COMPLETED_TODOS","filter","el","DELETE_TODO","idx","findIndex","slice"],"mappings":";;;;;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB,C,CAEA;AACA;AACA;AACA;AACA;;AAIA,IAAIC,KAAK,GAAC,GAAV;AAGA,eAAe,UAASC,KAAK,GAAG,EAAjB,EAAqBC,MAArB,EAA6B;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,WAAW,CAACK,QAAjB;AACE,aAAO,CACL,GAAGH,KADE,EAEL;AACEI,QAAAA,EAAE,EAAEL,KAAK,EADX;AAEEM,QAAAA,KAAK,EAAEJ,MAAM,CAACK,OAFhB;AAGEC,QAAAA,IAAI,EAAE;AAHR,OAFK,CAAP;;AAQF,SAAKT,WAAW,CAACU,WAAjB;AACE,aAAOR,KAAK,CAACS,GAAN,CAAUC,IAAI,IAClBA,IAAI,CAACN,EAAL,KAAYH,MAAM,CAACK,OAApB,qBACQI,IADR;AACcH,QAAAA,IAAI,EAAE,CAACG,IAAI,CAACH;AAD1B,WAEIG,IAHC,CAAP;;AAMF,SAAKZ,WAAW,CAACa,SAAjB;AACE,aAAOX,KAAK,CAACS,GAAN,CAAUC,IAAI,IAClBA,IAAI,CAACN,EAAL,KAAYH,MAAM,CAACG,EAApB,qBACQM,IADR;AACcL,QAAAA,KAAK,EAACJ,MAAM,CAACK;AAD3B,WAEII,IAHC,CAAP;AAQA;;AACF,SAAKZ,WAAW,CAACc,UAAjB;AACE,aAAOZ,KAAK,CAACS,GAAN,CAAUC,IAAI,IAAI;AACvB,iCAAYA,IAAZ;AAAkBH,UAAAA,IAAI,EAAEN,MAAM,CAACK;AAA/B;AACD,OAFM,CAAP;AAKF;;AACA,SAAKR,WAAW,CAACe,sBAAjB;AACE,aAAOb,KAAK,CAACc,MAAN,CAAcC,EAAD,IAAM,CAACA,EAAE,CAACR,IAAvB,CAAP;;AAIF,SAAKT,WAAW,CAACkB,WAAjB;AACE;AACI,cAAMC,GAAG,GAACjB,KAAK,CAACkB,SAAN,CAAiBH,EAAD,IAAMA,EAAE,CAACX,EAAH,KAAQH,MAAM,CAACK,OAArC,CAAV;AACA,eAAO,CACL,GAAGN,KAAK,CAACmB,KAAN,CAAY,CAAZ,EAAcF,GAAd,CADE,EAEL,GAAGjB,KAAK,CAACmB,KAAN,CAAYF,GAAG,GAAC,CAAhB,CAFE,CAAP;AAGH;;AACH;AACE,aAAOjB,KAAP;AA/CJ;AAiDD","sourcesContent":["import ActionTypes from '../actionTypes';\n\n// const initialState = [\n//     {id:'0',label:'sdlsjh',done:false},\n//     {id:'1',label:'dhj',done:false},\n//     {id:'2',label:'fsxj',done:false}\n//   ];\n\n\n\nlet maxId=100;\n\n\nexport default function(state = [], action) {\n  switch (action.type) {\n    case ActionTypes.ADD_TODO:\n      return [\n        ...state,\n        {\n          id: maxId++,\n          label: action.payload,\n          done: false\n        }\n      ]\n    case ActionTypes.TOGGLE_TODO:\n      return state.map(todo =>\n        (todo.id === action.payload)\n          ? {...todo, done: !todo.done}\n          : todo\n      )\n\n    case ActionTypes.EDIT_TODO:\n      return state.map(todo =>\n        (todo.id === action.id)\n          ? {...todo, label:action.payload}\n          : todo\n      )\n\n\n\n      //доделать, непонятно на что ругается\n    case ActionTypes.TOGGLE_ALL:\n      return state.map(todo => {\n        return { ...todo, done: action.payload};\n      })\n\n\n    //удалить выполненные, т.е вернуть активные\n    case ActionTypes.DELETE_COMPLETED_TODOS:\n      return state.filter((el)=>!el.done);\n\n\n\n    case ActionTypes.DELETE_TODO:\n      {\n          const idx=state.findIndex((el)=>el.id===action.payload)\n          return [\n            ...state.slice(0,idx),\n            ...state.slice(idx+1)]\n      }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}