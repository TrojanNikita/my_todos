{"ast":null,"code":"import _defineProperty from \"/Users/tk_user/Documents/todo-list/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport ActionTypes from '../actionTypes';\nconst initialState = {\n  todos: [{\n    id: '0',\n    label: 'sdlsjh'\n  }, {\n    id: '1',\n    label: 'dhj'\n  }, {\n    id: '2',\n    label: 'fsxj'\n  }]\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.ADD_TODO:\n      return _objectSpread({}, state);\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/Users/tk_user/Documents/todo-list/src/data/reducers/todos.js"],"names":["ActionTypes","initialState","todos","id","label","state","action","type","ADD_TODO"],"mappings":";;;;;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAG,CACN;AAACC,IAAAA,EAAE,EAAC,GAAJ;AAAQC,IAAAA,KAAK,EAAC;AAAd,GADM,EAEN;AAACD,IAAAA,EAAE,EAAC,GAAJ;AAAQC,IAAAA,KAAK,EAAC;AAAd,GAFM,EAGN;AAACD,IAAAA,EAAE,EAAC,GAAJ;AAAQC,IAAAA,KAAK,EAAC;AAAd,GAHM;AADW,CAArB;AAOA,eAAe,UAASC,KAAK,GAAGJ,YAAjB,EAA+BK,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,WAAW,CAACQ,QAAjB;AACE,+BAAWH,KAAX;AAFJ;;AAIA,SAAOA,KAAP;AACD","sourcesContent":["import ActionTypes from '../actionTypes';\n\nconst initialState = {\n  todos : [\n    {id:'0',label:'sdlsjh'},\n    {id:'1',label:'dhj'},\n    {id:'2',label:'fsxj'}\n  ]\n};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.ADD_TODO:\n      return {...state}\n  }\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}